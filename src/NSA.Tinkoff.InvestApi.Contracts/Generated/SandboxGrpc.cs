// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sandbox.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Tinkoff.InvestApi.V1 {
  /// <summary>
  ///Сервис для работы с песочницей TINKOFF INVEST API
  /// </summary>
  public static partial class SandboxService
  {
    static readonly string __ServiceName = "tinkoff.public.invest.api.contract.v1.SandboxService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_OpenSandboxAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_OpenSandboxAccountResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetAccountsRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetAccountsResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_CloseSandboxAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_CloseSandboxAccountResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PostOrderRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_PostOrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PostOrderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PostOrderResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_PostOrderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PostOrderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetOrdersRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrdersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetOrdersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetOrdersResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrdersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetOrdersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.CancelOrderRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_CancelOrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.CancelOrderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.CancelOrderResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_CancelOrderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.CancelOrderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetOrderStateRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrderStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetOrderStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.OrderState> __Marshaller_tinkoff_public_invest_api_contract_v1_OrderState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.OrderState.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PositionsRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_PositionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PositionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PositionsResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_PositionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PositionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.OperationsRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_OperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.OperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.OperationsResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_OperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.OperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PortfolioRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_PortfolioRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PortfolioRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.PortfolioResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_PortfolioResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.PortfolioResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.SandboxPayInRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_SandboxPayInRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.SandboxPayInRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.SandboxPayInResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_SandboxPayInResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.SandboxPayInResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest, global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse> __Method_OpenSandboxAccount = new grpc::Method<global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest, global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenSandboxAccount",
        __Marshaller_tinkoff_public_invest_api_contract_v1_OpenSandboxAccountRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_OpenSandboxAccountResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetAccountsRequest, global::Tinkoff.InvestApi.V1.GetAccountsResponse> __Method_GetSandboxAccounts = new grpc::Method<global::Tinkoff.InvestApi.V1.GetAccountsRequest, global::Tinkoff.InvestApi.V1.GetAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxAccounts",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest, global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse> __Method_CloseSandboxAccount = new grpc::Method<global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest, global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CloseSandboxAccount",
        __Marshaller_tinkoff_public_invest_api_contract_v1_CloseSandboxAccountRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_CloseSandboxAccountResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.PostOrderRequest, global::Tinkoff.InvestApi.V1.PostOrderResponse> __Method_PostSandboxOrder = new grpc::Method<global::Tinkoff.InvestApi.V1.PostOrderRequest, global::Tinkoff.InvestApi.V1.PostOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostSandboxOrder",
        __Marshaller_tinkoff_public_invest_api_contract_v1_PostOrderRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_PostOrderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetOrdersRequest, global::Tinkoff.InvestApi.V1.GetOrdersResponse> __Method_GetSandboxOrders = new grpc::Method<global::Tinkoff.InvestApi.V1.GetOrdersRequest, global::Tinkoff.InvestApi.V1.GetOrdersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxOrders",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrdersRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrdersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.CancelOrderRequest, global::Tinkoff.InvestApi.V1.CancelOrderResponse> __Method_CancelSandboxOrder = new grpc::Method<global::Tinkoff.InvestApi.V1.CancelOrderRequest, global::Tinkoff.InvestApi.V1.CancelOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelSandboxOrder",
        __Marshaller_tinkoff_public_invest_api_contract_v1_CancelOrderRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_CancelOrderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetOrderStateRequest, global::Tinkoff.InvestApi.V1.OrderState> __Method_GetSandboxOrderState = new grpc::Method<global::Tinkoff.InvestApi.V1.GetOrderStateRequest, global::Tinkoff.InvestApi.V1.OrderState>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxOrderState",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetOrderStateRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_OrderState);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.PositionsRequest, global::Tinkoff.InvestApi.V1.PositionsResponse> __Method_GetSandboxPositions = new grpc::Method<global::Tinkoff.InvestApi.V1.PositionsRequest, global::Tinkoff.InvestApi.V1.PositionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxPositions",
        __Marshaller_tinkoff_public_invest_api_contract_v1_PositionsRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_PositionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.OperationsRequest, global::Tinkoff.InvestApi.V1.OperationsResponse> __Method_GetSandboxOperations = new grpc::Method<global::Tinkoff.InvestApi.V1.OperationsRequest, global::Tinkoff.InvestApi.V1.OperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxOperations",
        __Marshaller_tinkoff_public_invest_api_contract_v1_OperationsRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_OperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.PortfolioRequest, global::Tinkoff.InvestApi.V1.PortfolioResponse> __Method_GetSandboxPortfolio = new grpc::Method<global::Tinkoff.InvestApi.V1.PortfolioRequest, global::Tinkoff.InvestApi.V1.PortfolioResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSandboxPortfolio",
        __Marshaller_tinkoff_public_invest_api_contract_v1_PortfolioRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_PortfolioResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.SandboxPayInRequest, global::Tinkoff.InvestApi.V1.SandboxPayInResponse> __Method_SandboxPayIn = new grpc::Method<global::Tinkoff.InvestApi.V1.SandboxPayInRequest, global::Tinkoff.InvestApi.V1.SandboxPayInResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SandboxPayIn",
        __Marshaller_tinkoff_public_invest_api_contract_v1_SandboxPayInRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_SandboxPayInResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tinkoff.InvestApi.V1.SandboxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for SandboxService</summary>
    public partial class SandboxServiceClient : grpc::ClientBase<SandboxServiceClient>
    {
      /// <summary>Creates a new client for SandboxService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SandboxServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SandboxService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SandboxServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SandboxServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SandboxServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///Метод регистрации счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse OpenSandboxAccount(global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenSandboxAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод регистрации счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse OpenSandboxAccount(global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenSandboxAccount, null, options, request);
      }
      /// <summary>
      ///Метод регистрации счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse> OpenSandboxAccountAsync(global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenSandboxAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод регистрации счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OpenSandboxAccountResponse> OpenSandboxAccountAsync(global::Tinkoff.InvestApi.V1.OpenSandboxAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenSandboxAccount, null, options, request);
      }
      /// <summary>
      ///Метод получения счетов в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetAccountsResponse GetSandboxAccounts(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения счетов в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetAccountsResponse GetSandboxAccounts(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxAccounts, null, options, request);
      }
      /// <summary>
      ///Метод получения счетов в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetAccountsResponse> GetSandboxAccountsAsync(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения счетов в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetAccountsResponse> GetSandboxAccountsAsync(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxAccounts, null, options, request);
      }
      /// <summary>
      ///Метод закрытия счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse CloseSandboxAccount(global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseSandboxAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод закрытия счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse CloseSandboxAccount(global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CloseSandboxAccount, null, options, request);
      }
      /// <summary>
      ///Метод закрытия счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse> CloseSandboxAccountAsync(global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseSandboxAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод закрытия счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.CloseSandboxAccountResponse> CloseSandboxAccountAsync(global::Tinkoff.InvestApi.V1.CloseSandboxAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CloseSandboxAccount, null, options, request);
      }
      /// <summary>
      ///Метод выставления торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PostOrderResponse PostSandboxOrder(global::Tinkoff.InvestApi.V1.PostOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSandboxOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод выставления торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PostOrderResponse PostSandboxOrder(global::Tinkoff.InvestApi.V1.PostOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostSandboxOrder, null, options, request);
      }
      /// <summary>
      ///Метод выставления торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PostOrderResponse> PostSandboxOrderAsync(global::Tinkoff.InvestApi.V1.PostOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSandboxOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод выставления торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PostOrderResponse> PostSandboxOrderAsync(global::Tinkoff.InvestApi.V1.PostOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostSandboxOrder, null, options, request);
      }
      /// <summary>
      ///Метод получения списка активных заявок по счёту в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetOrdersResponse GetSandboxOrders(global::Tinkoff.InvestApi.V1.GetOrdersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOrders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения списка активных заявок по счёту в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetOrdersResponse GetSandboxOrders(global::Tinkoff.InvestApi.V1.GetOrdersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxOrders, null, options, request);
      }
      /// <summary>
      ///Метод получения списка активных заявок по счёту в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetOrdersResponse> GetSandboxOrdersAsync(global::Tinkoff.InvestApi.V1.GetOrdersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOrdersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения списка активных заявок по счёту в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetOrdersResponse> GetSandboxOrdersAsync(global::Tinkoff.InvestApi.V1.GetOrdersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxOrders, null, options, request);
      }
      /// <summary>
      ///Метод отмены торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.CancelOrderResponse CancelSandboxOrder(global::Tinkoff.InvestApi.V1.CancelOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelSandboxOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод отмены торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.CancelOrderResponse CancelSandboxOrder(global::Tinkoff.InvestApi.V1.CancelOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelSandboxOrder, null, options, request);
      }
      /// <summary>
      ///Метод отмены торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.CancelOrderResponse> CancelSandboxOrderAsync(global::Tinkoff.InvestApi.V1.CancelOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelSandboxOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод отмены торгового поручения в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.CancelOrderResponse> CancelSandboxOrderAsync(global::Tinkoff.InvestApi.V1.CancelOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelSandboxOrder, null, options, request);
      }
      /// <summary>
      ///Метод получения статуса заявки в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OrderState GetSandboxOrderState(global::Tinkoff.InvestApi.V1.GetOrderStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOrderState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения статуса заявки в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OrderState GetSandboxOrderState(global::Tinkoff.InvestApi.V1.GetOrderStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxOrderState, null, options, request);
      }
      /// <summary>
      ///Метод получения статуса заявки в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OrderState> GetSandboxOrderStateAsync(global::Tinkoff.InvestApi.V1.GetOrderStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOrderStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения статуса заявки в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OrderState> GetSandboxOrderStateAsync(global::Tinkoff.InvestApi.V1.GetOrderStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxOrderState, null, options, request);
      }
      /// <summary>
      ///Метод получения позиций по виртуальному счёту песочницы.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PositionsResponse GetSandboxPositions(global::Tinkoff.InvestApi.V1.PositionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxPositions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения позиций по виртуальному счёту песочницы.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PositionsResponse GetSandboxPositions(global::Tinkoff.InvestApi.V1.PositionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxPositions, null, options, request);
      }
      /// <summary>
      ///Метод получения позиций по виртуальному счёту песочницы.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PositionsResponse> GetSandboxPositionsAsync(global::Tinkoff.InvestApi.V1.PositionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxPositionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения позиций по виртуальному счёту песочницы.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PositionsResponse> GetSandboxPositionsAsync(global::Tinkoff.InvestApi.V1.PositionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxPositions, null, options, request);
      }
      /// <summary>
      ///Метод получения операций в песочнице по номеру счёта.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OperationsResponse GetSandboxOperations(global::Tinkoff.InvestApi.V1.OperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения операций в песочнице по номеру счёта.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.OperationsResponse GetSandboxOperations(global::Tinkoff.InvestApi.V1.OperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxOperations, null, options, request);
      }
      /// <summary>
      ///Метод получения операций в песочнице по номеру счёта.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OperationsResponse> GetSandboxOperationsAsync(global::Tinkoff.InvestApi.V1.OperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения операций в песочнице по номеру счёта.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.OperationsResponse> GetSandboxOperationsAsync(global::Tinkoff.InvestApi.V1.OperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxOperations, null, options, request);
      }
      /// <summary>
      ///Метод получения портфолио в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PortfolioResponse GetSandboxPortfolio(global::Tinkoff.InvestApi.V1.PortfolioRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxPortfolio(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения портфолио в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.PortfolioResponse GetSandboxPortfolio(global::Tinkoff.InvestApi.V1.PortfolioRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSandboxPortfolio, null, options, request);
      }
      /// <summary>
      ///Метод получения портфолио в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PortfolioResponse> GetSandboxPortfolioAsync(global::Tinkoff.InvestApi.V1.PortfolioRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSandboxPortfolioAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения портфолио в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.PortfolioResponse> GetSandboxPortfolioAsync(global::Tinkoff.InvestApi.V1.PortfolioRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSandboxPortfolio, null, options, request);
      }
      /// <summary>
      ///Метод пополнения счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.SandboxPayInResponse SandboxPayIn(global::Tinkoff.InvestApi.V1.SandboxPayInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SandboxPayIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод пополнения счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.SandboxPayInResponse SandboxPayIn(global::Tinkoff.InvestApi.V1.SandboxPayInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SandboxPayIn, null, options, request);
      }
      /// <summary>
      ///Метод пополнения счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.SandboxPayInResponse> SandboxPayInAsync(global::Tinkoff.InvestApi.V1.SandboxPayInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SandboxPayInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод пополнения счёта в песочнице.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.SandboxPayInResponse> SandboxPayInAsync(global::Tinkoff.InvestApi.V1.SandboxPayInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SandboxPayIn, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SandboxServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SandboxServiceClient(configuration);
      }
    }

  }
}
#endregion
